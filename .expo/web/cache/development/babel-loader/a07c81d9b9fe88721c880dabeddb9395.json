{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/sadu/Sites/WC/rubikssoft/ecomerce-mob-app/src/component/common/ErrorHandler.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ErrorRBSheet from \"react-native-raw-bottom-sheet\";\nimport { Text, Spinner, View } from 'native-base';\n\nfunction mapStateToProps(state) {\n  return {\n    error: state.error\n  };\n}\n\nvar ErrorHandler = function (_Component) {\n  _inherits(ErrorHandler, _Component);\n\n  var _super = _createSuper(ErrorHandler);\n\n  function ErrorHandler() {\n    _classCallCheck(this, ErrorHandler);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ErrorHandler, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var error = this.props.error;\n\n      if (error.status) {\n        this.ErrorRBSheet.open();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var error = this.props.error;\n      return React.createElement(ErrorRBSheet, {\n        ref: function ref(_ref) {\n          _this.ErrorRBSheet = _ref;\n        },\n        height: 100,\n        closeOnDragDown: false,\n        closeOnPressMask: true,\n        customStyles: {\n          container: {\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'column'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 'bold',\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }\n      }, error.msg), error.errors.map(function (value, key) {\n        return React.createElement(Text, {\n          style: {\n            color: 'red',\n            textAlign: 'center'\n          },\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }\n        }, value);\n      })));\n    }\n  }]);\n\n  return ErrorHandler;\n}(Component);\n\nexport default connect(mapStateToProps)(ErrorHandler);","map":{"version":3,"sources":["/Users/sadu/Sites/WC/rubikssoft/ecomerce-mob-app/src/component/common/ErrorHandler.js"],"names":["React","Component","connect","ErrorRBSheet","Text","Spinner","View","mapStateToProps","state","error","ErrorHandler","props","status","open","ref","container","justifyContent","alignItems","flexDirection","fontWeight","textAlign","msg","errors","map","value","key","color"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AAEA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,IAAxB,QAAoC,aAApC;;AAGA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACC;AADV,GAAP;AAGH;;IAGKC,Y;;;;;;;;;;;;;yCAGmB;AAAA,UACTD,KADS,GACC,KAAKE,KADN,CACTF,KADS;;AAEjB,UAAIA,KAAK,CAACG,MAAV,EAAkB;AACd,aAAKT,YAAL,CAAkBU,IAAlB;AACH;AACJ;;;6BAEQ;AAAA;;AAAA,UACGJ,KADH,GACa,KAAKE,KADlB,CACGF,KADH;AAEL,aACI,oBAAC,YAAD;AACI,QAAA,GAAG,EAAE,aAAAK,IAAG,EAAI;AACR,UAAA,KAAI,CAACX,YAAL,GAAoBW,IAApB;AACH,SAHL;AAII,QAAA,MAAM,EAAE,GAJZ;AAKI,QAAA,eAAe,EAAE,KALrB;AAMI,QAAA,gBAAgB,EAAE,IANtB;AAOI,QAAA,YAAY,EAAE;AACVC,UAAAA,SAAS,EAAE;AACPC,YAAAA,cAAc,EAAE,QADT;AAEPC,YAAAA,UAAU,EAAE;AAFL;AADD,SAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAcI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,aAAa,EAAE;AAAjB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE,MAAd;AAAsBC,UAAAA,SAAS,EAAE;AAAjC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKX,KAAK,CAACY,GADX,CAFJ,EAMKZ,KAAK,CAACa,MAAN,CAAaC,GAAb,CAAiB,UAACC,KAAD,EAAQC,GAAR;AAAA,eACd,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE,KAAT;AAAgBN,YAAAA,SAAS,EAAE;AAA3B,WAAb;AAAoD,UAAA,GAAG,EAAEK,GAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKD,KADL,CADc;AAAA,OAAjB,CANL,CAdJ,CADJ;AAiCH;;;;EA7CsBvB,S;;AAgD3B,eAAeC,OAAO,CAClBK,eADkB,CAAP,CAEbG,YAFa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ErrorRBSheet from \"react-native-raw-bottom-sheet\";\n\nimport { Text, Spinner, View } from 'native-base'\n\n\nfunction mapStateToProps(state) {\n    return {\n        error: state.error\n    };\n}\n\n\nclass ErrorHandler extends Component {\n\n\n    componentDidUpdate() {\n        const { error } = this.props;\n        if (error.status) {\n            this.ErrorRBSheet.open()\n        }\n    }\n\n    render() {\n        const { error } = this.props;\n        return (\n            <ErrorRBSheet\n                ref={ref => {\n                    this.ErrorRBSheet = ref;\n                }}\n                height={100}\n                closeOnDragDown={false}\n                closeOnPressMask={true}\n                customStyles={{\n                    container: {\n                        justifyContent: \"center\",\n                        alignItems: \"center\"\n                    }\n                }}\n            >\n                <View style={{ flexDirection: 'column' }}>\n\n                    <Text style={{ fontWeight: 'bold', textAlign: 'center' }}>\n                        {error.msg}\n                    </Text>\n\n                    {error.errors.map((value, key) => (\n                        <Text style={{ color: 'red', textAlign: 'center' }} key={key}>\n                            {value}\n                        </Text>\n                    ))}\n\n\n\n                </View>\n\n            </ErrorRBSheet>\n        );\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n)(ErrorHandler);"]},"metadata":{},"sourceType":"module"}