{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/sadu/Sites/WC/rubikssoft/ecomerce-mob-app/node_modules/react-native-loading-spinner-overlay/src/index.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0\n  },\n  background: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  textContainer: {\n    flex: 1,\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'absolute'\n  },\n  textContent: {\n    top: 80,\n    height: 50,\n    fontSize: 20,\n    fontWeight: 'bold'\n  }\n});\nvar ANIMATION = ['none', 'slide', 'fade'];\nvar SIZES = ['small', 'normal', 'large'];\n\nvar Spinner = function (_React$Component) {\n  _inherits(Spinner, _React$Component);\n\n  var _super = _createSuper(Spinner);\n\n  function Spinner(props) {\n    var _this;\n\n    _classCallCheck(this, Spinner);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      visible: _this.props.visible,\n      textContent: _this.props.textContent\n    };\n    return _this;\n  }\n\n  _createClass(Spinner, [{\n    key: \"close\",\n    value: function close() {\n      this.setState({\n        visible: false\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var visible = nextProps.visible,\n          textContent = nextProps.textContent;\n      this.setState({\n        visible: visible,\n        textContent: textContent\n      });\n    }\n  }, {\n    key: \"_handleOnRequestClose\",\n    value: function _handleOnRequestClose() {\n      if (this.props.cancelable) {\n        this.close();\n      }\n    }\n  }, {\n    key: \"_renderDefaultContent\",\n    value: function _renderDefaultContent() {\n      return React.createElement(View, {\n        style: styles.background,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 7\n        }\n      }, React.createElement(ActivityIndicator, {\n        color: this.props.color,\n        size: this.props.size,\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.textContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: [styles.textContent, this.props.textStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }\n      }, this.state.textContent)));\n    }\n  }, {\n    key: \"_renderSpinner\",\n    value: function _renderSpinner() {\n      var _this2 = this;\n\n      var visible = this.state.visible;\n      if (!visible) return null;\n      var spinner = React.createElement(View, {\n        style: [styles.container, {\n          backgroundColor: this.props.overlayColor\n        }],\n        key: \"spinner_\" + Date.now(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 7\n        }\n      }, this.props.children ? this.props.children : this._renderDefaultContent());\n      return React.createElement(Modal, {\n        animationType: this.props.animation,\n        onRequestClose: function onRequestClose() {\n          return _this2._handleOnRequestClose();\n        },\n        supportedOrientations: ['landscape', 'portrait'],\n        transparent: true,\n        visible: visible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 7\n        }\n      }, spinner);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this._renderSpinner();\n    }\n  }]);\n\n  return Spinner;\n}(React.Component);\n\nSpinner.propTypes = {\n  visible: PropTypes.bool,\n  cancelable: PropTypes.bool,\n  textContent: PropTypes.string,\n  animation: PropTypes.oneOf(ANIMATION),\n  color: PropTypes.string,\n  size: PropTypes.oneOf(SIZES),\n  overlayColor: PropTypes.string\n};\nSpinner.defaultProps = {\n  visible: false,\n  cancelable: false,\n  textContent: '',\n  animation: 'none',\n  color: 'white',\n  size: 'large',\n  overlayColor: 'rgba(0, 0, 0, 0.25)'\n};\nexport { Spinner as default };","map":{"version":3,"sources":["/Users/sadu/Sites/WC/rubikssoft/ecomerce-mob-app/node_modules/react-native-loading-spinner-overlay/src/index.js"],"names":["React","PropTypes","styles","StyleSheet","create","container","flex","backgroundColor","position","top","bottom","left","right","background","justifyContent","alignItems","textContainer","textContent","height","fontSize","fontWeight","ANIMATION","SIZES","Spinner","props","state","visible","setState","nextProps","cancelable","close","color","size","textStyle","spinner","overlayColor","Date","now","children","_renderDefaultContent","animation","_handleOnRequestClose","_renderSpinner","Component","propTypes","bool","string","oneOf","defaultProps"],"mappings":"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","sourcesContent":["\n//     react-native-loading-spinner-overlay\n//     Copyright (c) 2016- Nick Baugh <niftylettuce@gmail.com>\n//     MIT Licensed\n\n// * Author: [@niftylettuce](https://twitter.com/#!/niftylettuce)\n// * Source:\n// <https://github.com/niftylettuce/react-native-loading-spinner-overlay>\n\n// # react-native-loading-spinner-overlay\n//\n// <https://github.com/facebook/react-native/issues/2501>\n// <https://rnplay.org/apps/1YkBCQ>\n// <https://github.com/facebook/react-native/issues/2501>\n// <https://github.com/brentvatne/react-native-overlay>\n//\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  StyleSheet,\n  View,\n  Text,\n  Modal,\n  ActivityIndicator\n} from 'react-native';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0\n  },\n  background: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  textContainer: {\n    flex: 1,\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'absolute'\n  },\n  textContent: {\n    top: 80,\n    height: 50,\n    fontSize: 20,\n    fontWeight: 'bold'\n  }\n});\n\nconst ANIMATION = ['none', 'slide', 'fade'];\nconst SIZES = ['small', 'normal', 'large'];\n\nexport default class Spinner extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { visible: this.props.visible, textContent: this.props.textContent };\n  }\n\n  static propTypes = {\n    visible: PropTypes.bool,\n    cancelable: PropTypes.bool,\n    textContent: PropTypes.string,\n    animation: PropTypes.oneOf(ANIMATION),\n    color: PropTypes.string,\n    size: PropTypes.oneOf(SIZES),\n    overlayColor: PropTypes.string\n  };\n\n  static defaultProps = {\n    visible: false,\n    cancelable: false,\n    textContent: '',\n    animation: 'none',\n    color: 'white',\n    size: 'large', // 'normal',\n    overlayColor: 'rgba(0, 0, 0, 0.25)'\n  };\n\n  close() {\n    this.setState({ visible: false });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { visible, textContent } = nextProps;\n    this.setState({ visible, textContent });\n  }\n\n  _handleOnRequestClose() {\n    if (this.props.cancelable) {\n      this.close();\n    }\n  }\n\n  _renderDefaultContent() {\n    return (\n      <View style={styles.background}>\n        <ActivityIndicator\n          color={this.props.color}\n          size={this.props.size}\n          style={{ flex: 1 }}\n        />\n        <View style={styles.textContainer}>\n          <Text style={[styles.textContent, this.props.textStyle]}>{this.state.textContent}</Text>\n        </View>\n      </View>);\n  }\n\n  _renderSpinner() {\n    const { visible } = this.state;\n\n    if (!visible)\n      return null;\n\n    const spinner = (\n      <View style={[\n        styles.container,\n        { backgroundColor: this.props.overlayColor }\n      ]} key={`spinner_${Date.now()}`}>\n        {this.props.children ? this.props.children : this._renderDefaultContent()}\n      </View>\n    );\n\n    return (\n      <Modal\n        animationType={this.props.animation}\n        onRequestClose={() => this._handleOnRequestClose()}\n        supportedOrientations={['landscape', 'portrait']}\n        transparent\n        visible={visible}>\n        {spinner}\n      </Modal>\n    );\n\n  }\n\n  render() {\n    return this._renderSpinner();\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}