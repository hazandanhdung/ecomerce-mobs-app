{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { REMOVE_FROM_CART, ADD_TO_CART, LOAD_CART } from \"../utils\";\nvar initialState = {\n  cart: [{\n    \"sellerid\": 0,\n    \"count\": 0,\n    \"totalAmount\": 0,\n    items: []\n  }],\n  activeCart: {\n    \"sellerid\": 0,\n    totalAmount: 0,\n    count: 0,\n    items: []\n  }\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TO_CART:\n      var seller = action.payload.seller;\n      var item = action.payload.item;\n      var cart = state.cart;\n      var activeCart = state.activeCart;\n      cart.map(function (value, key) {\n        if (value.sellerid === seller.id) {\n          console.log('seller Found');\n          console.log(item);\n          cart[key].items.filter(function (obj) {\n            return obj.id !== item.id;\n          });\n          console.log(cart[key].items);\n\n          var checkItem = function checkItem(itemobj) {\n            return itemobj.id === item.id;\n          };\n\n          if (!cart[key].items.some(checkItem)) {\n            console.log('item not Found');\n            cart[key].count++;\n            cart[key].items.push(item);\n            cart[key].totalAmount += item.price * item.unitvalue * item.count;\n          } else {\n            var olditem = cart[key][items].cart[key].totalAmount += newTotal;\n            console.log('item  Found');\n          }\n\n          activeCart = cart[key];\n        }\n      });\n\n      var checkSeller = function checkSeller(obj) {\n        return obj.sellerid === seller.id;\n      };\n\n      if (!cart.some(checkSeller)) {\n        console.log('seller not Found');\n        activeCart = {\n          count: 1,\n          sellerid: seller.id,\n          items: [item],\n          totalAmount: item.price * unitvalue * count\n        };\n        cart.push(activeCart);\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cart: cart,\n        activeCart: activeCart\n      });\n\n    case LOAD_CART:\n      var ItemIndex = null;\n      activeCart = {\n        totalAmount: 0,\n        count: 0,\n        items: []\n      };\n      ItemIndex = state.cart.findIndex(function (item) {\n        return item.sellerid === action.payload.id;\n      });\n\n      if (ItemIndex != -1) {\n        activeCart = state.cart[ItemIndex];\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        activeCart: activeCart\n      });\n      break;\n\n    case REMOVE_FROM_CART:\n      seller = action.payload.seller;\n      item = action.payload.item;\n      cart = state.cart;\n      activeCart = state.activeCart;\n      cart.map(function (value, key) {\n        if (value.sellerid === seller.id) {\n          cart[key].items.map(function (cartitem, cartitemindex) {\n            if (cartitem.id == item.id) {\n              cart[key].totalAmount -= item.price;\n              cart[key].count--;\n              cart[key].items.splice(cartitemindex, 1);\n            }\n          });\n          activeCart = cart[key];\n        }\n      });\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cart: cart,\n        activeCart: activeCart\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/sadu/Sites/WC/rubikssoft/ecomerce-mob-app/src/reducer/CartReducer.js"],"names":["REMOVE_FROM_CART","ADD_TO_CART","LOAD_CART","initialState","cart","items","activeCart","totalAmount","count","state","action","type","seller","payload","item","map","value","key","sellerid","id","console","log","filter","obj","checkItem","itemobj","some","push","price","unitvalue","olditem","newTotal","checkSeller","ItemIndex","findIndex","cartitem","cartitemindex","splice"],"mappings":"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","sourcesContent":["import {\n    REMOVE_FROM_CART,\n    ADD_TO_CART,\n    LOAD_CART\n} from \"../utils\";\n\n\n\nconst initialState = {\n    cart: [\n        {\n            \"sellerid\": 0,\n            \"count\": 0,\n            \"totalAmount\": 0,\n            items: [],\n        }\n    ],\n    activeCart: { \"sellerid\": 0, totalAmount: 0, count: 0, items: [] }\n\n}\n\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n\n        case ADD_TO_CART:\n            let seller = action.payload.seller;\n            let item = action.payload.item;\n            let cart = state.cart;\n            let activeCart = state.activeCart;\n            cart.map((value, key) => {\n                if (value.sellerid === seller.id) {\n                    console.log('seller Found')\n                    console.log(item)\n\n                    cart[key].items.filter(function (obj) {\n                        return obj.id !== item.id;\n                    });\n\n                    console.log(cart[key].items);\n\n                    let checkItem = itemobj => itemobj.id === item.id;\n                    if (!cart[key].items.some(checkItem)) {\n                        console.log('item not Found')\n\n                        cart[key].count++;\n                        cart[key].items.push(item)\n                        cart[key].totalAmount += item.price * item.unitvalue * item.count;\n                    } else {\n                        var olditem = cart[key][items].\n                            cart[key].totalAmount += newTotal;\n                        console.log('item  Found')\n                    }\n\n                    activeCart = cart[key];\n                }\n            })\n            const checkSeller = obj => obj.sellerid === seller.id;\n            if (!cart.some(checkSeller)) {\n                console.log('seller not Found')\n                activeCart = {\n                    count: 1,\n                    sellerid: seller.id,\n                    items: [item],\n                    totalAmount: item.price * unitvalue * count\n                }\n\n                cart.push(activeCart)\n            }\n\n            return {\n                ...state,\n                cart: cart,\n                activeCart: activeCart\n            };\n\n        case LOAD_CART:\n            let ItemIndex = null;\n            activeCart = { totalAmount: 0, count: 0, items: [] }\n            ItemIndex = state.cart.findIndex(\n                item => item.sellerid === action.payload.id\n            );\n            if (ItemIndex != -1) {\n                activeCart = state.cart[ItemIndex];\n            }\n            return {\n                ...state,\n                activeCart: activeCart\n            };\n\n            break;\n\n        case REMOVE_FROM_CART:\n            seller = action.payload.seller;\n            item = action.payload.item;\n            cart = state.cart;\n            activeCart = state.activeCart;\n            cart.map((value, key) => {\n                if (value.sellerid === seller.id) {\n                    cart[key].items.map((cartitem, cartitemindex) => {\n\n                        if (cartitem.id == item.id) {\n                            cart[key].totalAmount -= item.price;\n                            cart[key].count--;\n                            cart[key].items.splice(cartitemindex, 1);\n\n                        }\n\n                    })\n                    activeCart = cart[key];\n                }\n            })\n            return {\n                ...state,\n                cart: cart,\n                activeCart: activeCart\n            };\n\n\n\n\n        default:\n            return state\n    }\n}\n"]},"metadata":{},"sourceType":"module"}