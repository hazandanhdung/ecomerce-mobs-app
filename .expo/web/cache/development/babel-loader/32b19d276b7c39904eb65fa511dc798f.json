{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/sadu/Sites/WC/rubikssoft/ecomerce-mob-app/src/routing.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Root } from \"native-base\";\nimport Expo from \"expo\";\nimport { AppLoading } from 'expo';\nimport * as Font from 'expo-font';\nimport { setBaseURL, setCustomHeaders } from \"./apis\";\nimport AppNavigator from \"./navigation/AppNavigator\";\n\nvar Routing = function (_PureComponent) {\n  _inherits(Routing, _PureComponent);\n\n  var _super = _createSuper(Routing);\n\n  function Routing(props) {\n    var _this;\n\n    _classCallCheck(this, Routing);\n\n    _this = _super.call(this, props);\n    setBaseURL(\"http://localhost:5000/api\");\n\n    if (props.token) {\n      setCustomHeaders([{\n        name: \"Authorization\",\n        value: props.token\n      }]);\n    }\n\n    _this.state = {\n      isReady: false\n    };\n    return _this;\n  }\n\n  _createClass(Routing, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function UNSAFE_componentWillMount() {\n      return _regeneratorRuntime.async(function UNSAFE_componentWillMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                'Purpose': require(\"../assets/Fonts/Purpose.ttf\"),\n                \"Roboto\": require(\"../assets/Fonts/roboto/Roboto-Regular.ttf\"),\n                Roboto_medium: require(\"../assets/Fonts/roboto/Roboto-Medium.ttf\"),\n                Ionicons: require(\"../node_modules/@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/Ionicons.ttf\")\n              }));\n\n            case 2:\n              this.setState({\n                isReady: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.state.isReady) {\n        return React.createElement(AppLoading, {\n          onFinish: function onFinish() {\n            return _this2.setState({\n              isReady: true\n            });\n          },\n          onError: console.warn,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 14\n          }\n        });\n      }\n\n      var Navigator = AppNavigator(this.props.token ? \"Main\" : \"Authentication\");\n      return React.createElement(Root, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }\n      }, React.createElement(Navigator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Routing;\n}(PureComponent);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var user = _ref.user;\n  var token = user.token;\n  return {\n    token: token\n  };\n};\n\nexport default connect(mapStateToProps, {})(Routing);","map":{"version":3,"sources":["/Users/sadu/Sites/WC/rubikssoft/ecomerce-mob-app/src/routing.js"],"names":["React","PureComponent","connect","Root","Expo","AppLoading","Font","setBaseURL","setCustomHeaders","AppNavigator","Routing","props","token","name","value","state","isReady","loadAsync","require","Roboto_medium","Ionicons","setState","console","warn","Navigator","mapStateToProps","user"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,SAASC,UAAT,QAA2B,MAA3B;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,SAASC,UAAT,EAAqBC,gBAArB;AAEA,OAAOC,YAAP;;IAEMC,O;;;;;AACJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACAJ,IAAAA,UAAU,CAAC,2BAAD,CAAV;;AACA,QAAII,KAAK,CAACC,KAAV,EAAiB;AACfJ,MAAAA,gBAAgB,CAAC,CACf;AACEK,QAAAA,IAAI,EAAE,eADR;AAEEC,QAAAA,KAAK,EAAEH,KAAK,CAACC;AAFf,OADe,CAAD,CAAhB;AAMD;;AACD,UAAKG,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAXiB;AAclB;;;;;;;;;;+CAGOV,IAAI,CAACW,SAAL,CAAe;AACnB,2BAAWC,OAAO,+BADC;AAEnB,0BAAUA,OAAO,6CAFE;AAGnBC,gBAAAA,aAAa,EAAED,OAAO,4CAHH;AAInBE,gBAAAA,QAAQ,EAAEF,OAAO;AAJE,eAAf,C;;;AAMN,mBAAKG,QAAL,CAAc;AAAEL,gBAAAA,OAAO,EAAE;AAAX,eAAd;;;;;;;;;;;6BAGO;AAAA;;AACP,UAAI,CAAC,KAAKD,KAAL,CAAWC,OAAhB,EAAyB;AACvB,eAAO,oBAAC,UAAD;AACL,UAAA,QAAQ,EAAE;AAAA,mBAAM,MAAI,CAACK,QAAL,CAAc;AAAEL,cAAAA,OAAO,EAAE;AAAX,aAAd,CAAN;AAAA,WADL;AAEL,UAAA,OAAO,EAAEM,OAAO,CAACC,IAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAID;;AAED,UAAIC,SAAS,GAAGf,YAAY,CAAC,KAAKE,KAAL,CAAWC,KAAX,GAAmB,MAAnB,GAA4B,gBAA7B,CAA5B;AACA,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;;;;EAzCmBX,a;;AA4CtB,IAAMwB,eAAe,GAAG,SAAlBA,eAAkB,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAAA,MAC5Bd,KAD4B,GAClBc,IADkB,CAC5Bd,KAD4B;AAEpC,SAAO;AAAEA,IAAAA,KAAK,EAALA;AAAF,GAAP;AACD,CAHD;;AAKA,eAAeV,OAAO,CACpBuB,eADoB,EAEpB,EAFoB,CAAP,CAGbf,OAHa,CAAf","sourcesContent":["import React, { PureComponent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Root } from \"native-base\";\nimport Expo from \"expo\";\n\nimport { AppLoading } from 'expo';\nimport * as Font from 'expo-font';\nimport { setBaseURL, setCustomHeaders } from \"./apis\";\n\nimport AppNavigator from \"./navigation/AppNavigator\";\n\nclass Routing extends PureComponent {\n  constructor(props) {\n    super(props);\n    setBaseURL(\"http://localhost:5000/api\");\n    if (props.token) {\n      setCustomHeaders([\n        {\n          name: \"Authorization\",\n          value: props.token\n        }\n      ]);\n    }\n    this.state = {\n      isReady: false\n    };\n  }\n\n  async UNSAFE_componentWillMount() {\n    await Font.loadAsync({\n      'Purpose': require(\"../assets/Fonts/Purpose.ttf\"),\n      \"Roboto\": require(\"../assets/Fonts/roboto/Roboto-Regular.ttf\"),\n      Roboto_medium: require(\"../assets/Fonts/roboto/Roboto-Medium.ttf\"),\n      Ionicons: require(\"../node_modules/@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/Ionicons.ttf\")\n    });\n    this.setState({ isReady: true });\n  }\n\n  render() {\n    if (!this.state.isReady) {\n      return <AppLoading\n        onFinish={() => this.setState({ isReady: true })}\n        onError={console.warn}\n      />;\n    }\n    // console.log(\"TOKEN\", this.props.token);\n    let Navigator = AppNavigator(this.props.token ? \"Main\" : \"Authentication\");\n    return (\n      <Root>\n        <Navigator />\n      </Root>\n    );\n  }\n}\n\nconst mapStateToProps = ({ user }) => {\n  const { token } = user;\n  return { token };\n};\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(Routing);\n"]},"metadata":{},"sourceType":"module"}