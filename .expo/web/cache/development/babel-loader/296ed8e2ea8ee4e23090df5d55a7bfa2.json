{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/sadu/Sites/WC/rubikssoft/ecomerce-mob-app/src/component/common/Notification.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ListView from \"react-native-web/dist/exports/ListView\";\nimport { Container, Content, Card, CardItem, Text, Left, Right, Button, Icon, Body, List, ListItem, View, Header, Title } from \"native-base\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    height = _Dimensions$get.height;\n\nvar datas = [{\n  title: \"Desktop\",\n  note: \"20% off all Desktop\",\n  logo: require(\"../../../assets/Images/desktop-logo.jpg\")\n}, {\n  title: \"Laptop\",\n  note: \"30% off all Laptop\",\n  logo: require(\"../../../assets/Images/desktop-logo.jpg\")\n}, {\n  title: \"Tablet\",\n  note: \"10% off all Tablet\",\n  logo: require(\"../../../assets/Images/desktop-logo.jpg\")\n}, {\n  title: \"Mobile\",\n  note: \"40% off all Mobile\",\n  logo: require(\"../../../assets/Images/desktop-logo.jpg\")\n}];\n\nvar Notification = function (_Component) {\n  _inherits(Notification, _Component);\n\n  var _super = _createSuper(Notification);\n\n  function Notification(props) {\n    var _this;\n\n    _classCallCheck(this, Notification);\n\n    _this = _super.call(this, props);\n    _this.ds = new ListView.DataSource({\n      rowHasChanged: function rowHasChanged(r1, r2) {\n        return r1 !== r2;\n      }\n    });\n    _this.state = {\n      basic: true,\n      listViewData: datas\n    };\n    return _this;\n  }\n\n  _createClass(Notification, [{\n    key: \"deleteRow\",\n    value: function deleteRow(secId, rowId, rowMap) {\n      rowMap[\"\" + secId + rowId].props.closeRow();\n\n      var newData = _toConsumableArray(this.state.listViewData);\n\n      newData.splice(rowId, 1);\n      this.setState({\n        listViewData: newData\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var ds = new ListView.DataSource({\n        rowHasChanged: function rowHasChanged(r1, r2) {\n          return r1 !== r2;\n        }\n      });\n      return React.createElement(Container, {\n        style: {\n          backgroundColor: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }\n      }, React.createElement(Header, {\n        style: {\n          backgroundColor: \"#2c8ef4\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }, React.createElement(Left, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      }, React.createElement(Button, {\n        transparent: true,\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate(\"Home\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      }, React.createElement(Icon, {\n        style: {\n          color: \"white\"\n        },\n        name: \"arrow-back\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }\n      }))), React.createElement(Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      }, React.createElement(Title, {\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }\n      }, \"Notifications\")), React.createElement(Right, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      })), React.createElement(View, {\n        style: {\n          height: height - 80\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }, React.createElement(Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }, React.createElement(List, {\n        dataSource: this.ds.cloneWithRows(this.state.listViewData),\n        renderRow: function renderRow(data) {\n          return React.createElement(ListItem, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }\n          }, React.createElement(Card, {\n            style: {\n              elevation: 3,\n              marginLeft: 25,\n              marginRight: 15,\n              marginBottom: 15,\n              marginTop: 10\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }\n          }, React.createElement(CardItem, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 21\n            }\n          }, React.createElement(Left, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 23\n            }\n          }, React.createElement(Icon, {\n            name: \"ios-notifications-outline\",\n            size: 30,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 25\n            }\n          }), React.createElement(Body, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 27\n            }\n          }, data.title), React.createElement(Text, {\n            note: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 27\n            }\n          }, data.note)))), React.createElement(CardItem, {\n            cardBody: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }\n          }, React.createElement(Image, {\n            style: {\n              height: 100,\n              flex: 1\n            },\n            source: data.logo,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 23\n            }\n          })), React.createElement(CardItem, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 21\n            }\n          }, React.createElement(Left, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 23\n            }\n          }, React.createElement(Button, {\n            iconLeft: true,\n            transparent: true,\n            danger: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 25\n            }\n          }, React.createElement(Icon, {\n            name: \"ios-trash\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 27\n            }\n          }))), React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 23\n            }\n          }, \"Swip for action perform\"), React.createElement(Right, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 23\n            }\n          }, React.createElement(Button, {\n            iconLeft: true,\n            transparent: true,\n            primary: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 25\n            }\n          }, React.createElement(Icon, {\n            name: \"ios-cart\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 27\n            }\n          }))))));\n        },\n        renderRightHiddenRow: function renderRightHiddenRow(data) {\n          return React.createElement(Button, {\n            full: true,\n            onPress: function onPress() {\n              return alert(data.title);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }\n          }, React.createElement(Icon, {\n            active: true,\n            name: \"ios-cart\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 19\n            }\n          }));\n        },\n        renderLeftHiddenRow: function renderLeftHiddenRow(data, secId, rowId, rowMap) {\n          return React.createElement(Button, {\n            full: true,\n            danger: true,\n            onPress: function onPress(_) {\n              return _this2.deleteRow(secId, rowId, rowMap);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }\n          }, React.createElement(Icon, {\n            active: true,\n            name: \"trash\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }\n          }));\n        },\n        leftOpenValue: 75,\n        rightOpenValue: -75,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return Notification;\n}(Component);\n\nexport { Notification as default };","map":{"version":3,"sources":["/Users/sadu/Sites/WC/rubikssoft/ecomerce-mob-app/src/component/common/Notification.js"],"names":["React","Component","Container","Content","Card","CardItem","Text","Left","Right","Button","Icon","Body","List","ListItem","View","Header","Title","Dimensions","get","height","datas","title","note","logo","require","Notification","props","ds","ListView","DataSource","rowHasChanged","r1","r2","state","basic","listViewData","secId","rowId","rowMap","closeRow","newData","splice","setState","backgroundColor","navigation","navigate","color","cloneWithRows","data","elevation","marginLeft","marginRight","marginBottom","marginTop","flex","alert","_","deleteRow"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { FlatList, Dimensions, Image, ListView } from \"react-native\";\nimport {\n  Container,\n  Content,\n  Card,\n  CardItem,\n  Text,\n  Left,\n  Right,\n  Button,\n  Icon,\n  Body,\n  List,\n  ListItem,\n  View,\n  Header,\n  Title\n} from \"native-base\";\n\nlet { height } = Dimensions.get(\"window\");\nconst datas = [\n  {\n    title: \"Desktop\",\n    note: \"20% off all Desktop\",\n    logo: require(\"../../../assets/Images/desktop-logo.jpg\")\n  },\n  {\n    title: \"Laptop\",\n    note: \"30% off all Laptop\",\n    logo: require(\"../../../assets/Images/desktop-logo.jpg\")\n  },\n  {\n    title: \"Tablet\",\n    note: \"10% off all Tablet\",\n    logo: require(\"../../../assets/Images/desktop-logo.jpg\")\n  },\n  {\n    title: \"Mobile\",\n    note: \"40% off all Mobile\",\n    logo: require(\"../../../assets/Images/desktop-logo.jpg\")\n  }\n];\nexport default class Notification extends Component {\n  constructor(props) {\n    super(props);\n    this.ds = new ListView.DataSource({ rowHasChanged: (r1, r2) => r1 !== r2 });\n    this.state = {\n      basic: true,\n      listViewData: datas\n    };\n  }\n  deleteRow(secId, rowId, rowMap) {\n    rowMap[`${secId}${rowId}`].props.closeRow();\n    const newData = [...this.state.listViewData];\n    newData.splice(rowId, 1);\n    this.setState({ listViewData: newData });\n  }\n  render() {\n    const ds = new ListView.DataSource({\n      rowHasChanged: (r1, r2) => r1 !== r2\n    });\n\n    return (\n      <Container style={{ backgroundColor: \"white\" }}>\n        <Header style={{ backgroundColor: \"#2c8ef4\" }}>\n          <Left>\n            <Button\n              transparent\n              onPress={() => this.props.navigation.navigate(\"Home\")}\n            >\n              <Icon style={{ color: \"white\" }} name=\"arrow-back\" />\n            </Button>\n          </Left>\n          <Body>\n            <Title style={{ color: \"white\" }}>Notifications</Title>\n          </Body>\n          <Right />\n        </Header>\n        <View style={{ height: height - 80 }}>\n          <Content>\n            <List\n              dataSource={this.ds.cloneWithRows(this.state.listViewData)}\n              renderRow={data => (\n                <ListItem>\n                  <Card\n                    style={{\n                      elevation: 3,\n                      marginLeft: 25,\n                      marginRight: 15,\n                      marginBottom: 15,\n                      marginTop: 10\n                    }}\n                  >\n                    <CardItem>\n                      <Left>\n                        <Icon name=\"ios-notifications-outline\" size={30} />\n                        <Body>\n                          <Text>{data.title}</Text>\n                          <Text note>{data.note}</Text>\n                        </Body>\n                      </Left>\n                    </CardItem>\n                    <CardItem cardBody>\n                      <Image\n                        style={{ height: 100, flex: 1 }}\n                        source={data.logo}\n                      />\n                    </CardItem>\n                    <CardItem>\n                      <Left>\n                        <Button iconLeft transparent danger>\n                          <Icon name=\"ios-trash\" />\n                        </Button>\n                      </Left>\n                      <Text>Swip for action perform</Text>\n                      <Right>\n                        <Button iconLeft transparent primary>\n                          <Icon name=\"ios-cart\" />\n                        </Button>\n                      </Right>\n                    </CardItem>\n                  </Card>\n                </ListItem>\n              )}\n              renderRightHiddenRow={data => (\n                <Button full onPress={() => alert(data.title)}>\n                  <Icon active name=\"ios-cart\" />\n                </Button>\n              )}\n              renderLeftHiddenRow={(data, secId, rowId, rowMap) => (\n                <Button\n                  full\n                  danger\n                  onPress={_ => this.deleteRow(secId, rowId, rowMap)}\n                >\n                  <Icon active name=\"trash\" />\n                </Button>\n              )}\n              leftOpenValue={75}\n              rightOpenValue={-75}\n            />\n          </Content>\n        </View>\n      </Container>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}