{"ast":null,"code":"import { LOAD_LOCATION } from \"../utils\";\nimport { PURGE, REHYDRATE } from 'redux-persist';\nimport { purgeStoredState } from 'redux-persist';\nvar initialState = {\n  location: {\n    \"id\": \"3\",\n    \"name\": \"Bengaluru\",\n    \"state\": \"Karnataka\"\n  }\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOAD_LOCATION:\n      return {\n        location: action.payload\n      };\n\n      REHYDRATE: console.log(\"REHYDRATING!!!!\");\n\n      return state;\n\n      PURGE: console.log(\"PURGING!!!!\");\n\n      return {};\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/sadu/Sites/WC/rubikssoft/ecomerce-mob-app/src/reducer/LocationReducer.js"],"names":["LOAD_LOCATION","PURGE","REHYDRATE","purgeStoredState","initialState","location","state","action","type","payload","console","log"],"mappings":"AAAA,SAASA,aAAT;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,eAAjC;AACA,SAASC,gBAAT,QAAiC,eAAjC;AAGA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE;AACN,UAAM,GADA;AAEN,YAAQ,WAFF;AAGN,aAAS;AAHH;AADO,CAArB;AASA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAE7C,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKR,aAAL;AACI,aAAO;AACHK,QAAAA,QAAQ,EAAEE,MAAM,CAACE;AADd,OAAP;;AAGAP,MAAAA,SAAS,EACTQ,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AACA,aAAOL,KAAP;;AACAL,MAAAA,KAAK,EACLS,OAAO,CAACC,GAAR,CAAY,aAAZ;;AACA,aAAO,EAAP;;AACJ;AACI,aAAOL,KAAP;AAbR;AAeH,CAjBD","sourcesContent":["import { LOAD_LOCATION } from \"../utils\";\nimport { PURGE, REHYDRATE } from 'redux-persist';\nimport { purgeStoredState } from 'redux-persist'\n\n\nconst initialState = {\n    location: {\n        \"id\": \"3\",\n        \"name\": \"Bengaluru\",\n        \"state\": \"Karnataka\"\n    }\n}\n\n\nexport default (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case LOAD_LOCATION:\n            return {\n                location: action.payload\n            };\n            REHYDRATE:    // This added just to show that this action type also exists, can be omitted. \n            console.log(\"REHYDRATING!!!!\");\n            return state;\n            PURGE:\n            console.log(\"PURGING!!!!\");\n            return {};\n        default:\n            return state\n    }\n}\n"]},"metadata":{},"sourceType":"module"}